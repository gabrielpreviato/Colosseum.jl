var documenterSearchIndex = {"docs":
[{"location":"api/api_reference/","page":"API Reference","title":"API Reference","text":"CurrentModule = Colosseum","category":"page"},{"location":"api/api_reference/#Colosseum-API-Reference","page":"API Reference","title":"Colosseum API Reference","text":"","category":"section"},{"location":"api/api_reference/","page":"API Reference","title":"API Reference","text":"Documentation for Colosseum.","category":"page"},{"location":"api/api_reference/","page":"API Reference","title":"API Reference","text":"","category":"page"},{"location":"api/api_reference/","page":"API Reference","title":"API Reference","text":"Modules = [Colosseum]\nPages = [\"client.jl\"]","category":"page"},{"location":"api/api_reference/#Colosseum.armDisarm","page":"API Reference","title":"Colosseum.armDisarm","text":"Arms || disarms vehicle\n\nArgs:     arm (bool) True to arm, false to disarm the vehicle     vehicle_name (str, optional) Name of the vehicle to send this command to\n\nReturns:     bool: Success\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.confirmConnection-Tuple{Colosseum.VehicleClient}","page":"API Reference","title":"Colosseum.confirmConnection","text":"Checks state of connection every 1 sec and reports it in Console so user can see the progress for connection.\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.getHomeGeoPoint","page":"API Reference","title":"Colosseum.getHomeGeoPoint","text":"Get the Home location of the vehicle\n\nArgs:     vehicle_name (str, optional) Name of vehicle to get home location of\n\nReturns:     GeoPoint: Home location of the vehicle\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.getMinRequiredClientVersion-Tuple{Colosseum.VehicleClient}","page":"API Reference","title":"Colosseum.getMinRequiredClientVersion","text":"Enables || disables API control for vehicle corresponding to vehicle_name\n\nArgs:     isenabled (bool) True to enable, false to disable API control     vehiclename (str, optional) Name of the vehicle to send this command to\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.isApiControlEnabled","page":"API Reference","title":"Colosseum.isApiControlEnabled","text":"Returns true if API control is established.\n\nIf false (which is functionault) then API calls would be ignored. After a successful call to enableApiControl, isApiControlEnabled should return true.\n\nArgs:     vehicle_name (str, optional) Name of the vehicle\n\nReturns:     bool: If API control is enabled\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.ping-Tuple{Colosseum.VehicleClient}","page":"API Reference","title":"Colosseum.ping","text":"ping(c::VehicleClient)\n\nIf connection is established then this call will return true otherwise it will be blocked until timeout\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.reset-Tuple{Colosseum.VehicleClient}","page":"API Reference","title":"Colosseum.reset","text":"reset(c::VehicleClient)\n\nReset the vehicle to its original starting state\n\nNote that you must call enableApiControl and armDisarm again after the call to reset\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simAddDetectionFilterMeshName","page":"API Reference","title":"Colosseum.simAddDetectionFilterMeshName","text":"Add mesh name to detect in wild card format\n\nFor example: simAddDetectionFilterMeshName(\"Car*\") will detect all instance named \"Car*\"\n\nArgs:     cameraname (str) Name of the camera, for backwards compatibility, ID numbers such as 0,1,etc. can also be used     imagetype (ImageType) Type of image required     meshname (str) mesh name in wild card format     vehiclename (str, optional) Vehicle which the camera is associated with     external (bool, optional) Whether the camera is an External Camera\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simClearDetectionMeshNames","page":"API Reference","title":"Colosseum.simClearDetectionMeshNames","text":"Clear all mesh names from detection filter\n\nArgs:     cameraname (str) Name of the camera, for backwards compatibility, ID numbers such as 0,1,etc. can also be used     imagetype (ImageType) Type of image required     vehicle_name (str, optional) Vehicle which the camera is associated with     external (bool, optional) Whether the camera is an External Camera\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simContinueForFrames-Tuple{Colosseum.VehicleClient, Any}","page":"API Reference","title":"Colosseum.simContinueForFrames","text":"Continue (or resume if paused) the simulation for the specified number of frames, after which the simulation will be paused.\n\nArgs:     frames (int) Frames to run the simulation for\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simContinueForTime-Tuple{Colosseum.VehicleClient, Real}","page":"API Reference","title":"Colosseum.simContinueForTime","text":"Continue the simulation for the specified number of seconds\n\nArgs:     seconds (float) Time to run the simulation for\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simDestroyObject-Tuple{Colosseum.VehicleClient, Any}","page":"API Reference","title":"Colosseum.simDestroyObject","text":"Removes selected object from the world\n\nArgs:     object_name (str) Name of object to be removed\n\nReturns:     bool: True if object is queued up for removal\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simEnableWeather-Tuple{Colosseum.VehicleClient, Bool}","page":"API Reference","title":"Colosseum.simEnableWeather","text":"Enable Weather effects. Needs to be called before using simSetWeatherParameter API\n\nArgs:     enable (bool) True to enable, false to disable\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simGetCameraInfo","page":"API Reference","title":"Colosseum.simGetCameraInfo","text":"Get details about the camera\n\nArgs:     cameraname (str) Name of the camera, for backwards compatibility, ID numbers such as 0,1,etc. can also be used     vehiclename (str, optional) Vehicle which the camera is associated with     external (bool, optional) Whether the camera is an External Camera\n\nReturns:     CameraInfo:\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simGetCollisionInfo","page":"API Reference","title":"Colosseum.simGetCollisionInfo","text":"Args:     vehicle_name (str, optional) Name of the Vehicle to get the info of\n\nReturns:     CollisionInfo:\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simGetDetections","page":"API Reference","title":"Colosseum.simGetDetections","text":"Get current detections\n\nArgs:     cameraname (str) Name of the camera, for backwards compatibility, ID numbers such as 0,1,etc. can also be used     imagetype (ImageType) Type of image required     vehicle_name (str, optional) Vehicle which the camera is associated with     external (bool, optional) Whether the camera is an External Camera\n\nReturns:     DetectionInfo array\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simGetDistortionParams","page":"API Reference","title":"Colosseum.simGetDistortionParams","text":"Get camera distortion parameters\n\nArgs:     cameraname (str) Name of the camera, for backwards compatibility, ID numbers such as 0,1,etc. can also be used     vehiclename (str, optional) Vehicle which the camera is associated with     external (bool, optional) Whether the camera is an External Camera\n\nReturns:     List (float) List of distortion parameter values corresponding to K1, K2, K3, P1, P2 respectively.\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simGetImage","page":"API Reference","title":"Colosseum.simGetImage","text":"Get a single image Returns bytes of png format image which can be dumped into abinary file to create .png image string_to_uint8_array() can be used to convert into Numpy unit8 array See https://microsoft.github.io/AirSim/imageapis/ for details Args:     cameraname (str) Name of the camera, for backwards compatibility, ID numbers such as 0,1,etc. can also be used     imagetype (ImageType) Type of image required     vehiclename (str, optional) Name of the vehicle with the camera     external (bool, optional) Whether the camera is an External Camera Returns:     Binary string literal of compressed png image\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simGetImages","page":"API Reference","title":"Colosseum.simGetImages","text":"Get multiple images\n\nSee https://microsoft.github.io/AirSim/image_apis/ for details and examples\n\nArgs:     requests (list[ImageRequest]) Images required     vehicle_name (str, optional) Name of vehicle associated with the camera     external (bool, optional) Whether the camera is an External Camera\n\nReturns:     list[ImageResponse]:\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simGetMeshPositionVertexBuffers-Tuple{Colosseum.VehicleClient}","page":"API Reference","title":"Colosseum.simGetMeshPositionVertexBuffers","text":"Returns the static meshes that make up the scene\n\nSee https://microsoft.github.io/AirSim/meshes/ for details and how to use this\n\nReturns:     list[MeshPositionVertexBuffersResponse]:\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simGetObjectPose-Tuple{Colosseum.VehicleClient, Any}","page":"API Reference","title":"Colosseum.simGetObjectPose","text":"The position inside the returned Pose is in the world frame\n\nArgs:     object_name (str) Object to get the Pose of\n\nReturns:     Pose:\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simGetObjectScale-Tuple{Colosseum.VehicleClient, Any}","page":"API Reference","title":"Colosseum.simGetObjectScale","text":"Gets scale of an object in the world\n\nArgs:     object_name (str) Object to get the scale of\n\nReturns:     airsim.Vector3r: Scale\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simGetSegmentationObjectID-Tuple{Colosseum.VehicleClient, Any}","page":"API Reference","title":"Colosseum.simGetSegmentationObjectID","text":"Returns Object ID for the given mesh name\n\nMapping of Object IDs to RGB values can be seen at https://microsoft.github.io/AirSim/seg_rgbs.txt\n\nArgs:     mesh_name (str) Name of the mesh to get the ID of\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simGetVehiclePose","page":"API Reference","title":"Colosseum.simGetVehiclePose","text":"The position inside the returned Pose is in the frame of the vehicle's starting point\n\nArgs:     vehicle_name (str, optional) Name of the vehicle to get the Pose of\n\nReturns:     Pose:\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simGetWorldExtents-Tuple{Colosseum.VehicleClient}","page":"API Reference","title":"Colosseum.simGetWorldExtents","text":"Returns a list of GeoPoints representing the minimum and maximum extents of the world\n\nReturns:     list[GeoPoint]\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simIsPause-Tuple{Colosseum.VehicleClient}","page":"API Reference","title":"Colosseum.simIsPause","text":"Returns true if the simulation is paused\n\nReturns:     bool: If the simulation is paused\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simListAssets-Tuple{Colosseum.VehicleClient}","page":"API Reference","title":"Colosseum.simListAssets","text":"Lists all the assets present in the Asset Registry\n\nReturns:     list[str]: Names of all the assets\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simListSceneObjects","page":"API Reference","title":"Colosseum.simListSceneObjects","text":"Lists the objects present in the environment\n\nend\n\nfunctionault behaviour is to list all objects, regex can be used to return smaller list of matching objects || actors\n\nArgs:\n    name_regex (str, optional) String to match actor names against, e.g. \"Cylinder.*\"\n\nReturns:\n    list[str]: List containing all the names\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simLoadLevel-Tuple{Colosseum.VehicleClient, Any}","page":"API Reference","title":"Colosseum.simLoadLevel","text":"Loads a level specified by its name\n\nArgs:     level_name (str) Name of the level to load\n\nReturns:     bool: True if the level was successfully loaded\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simPause-Tuple{Colosseum.VehicleClient, Bool}","page":"API Reference","title":"Colosseum.simPause","text":"Pauses simulation\n\nArgs:     is_paused (bool) True to pause the simulation, false to release\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simPrintLogMessage","page":"API Reference","title":"Colosseum.simPrintLogMessage","text":"Prints the specified message in the simulator's window.\n\nIf messageparam is supplied, then it's printed next to the message and in that case if this API is called with same message value but different messageparam again then previous line is overwritten with new line (instead of API creating new line on display).\n\nFor example, simPrintLogMessage(\"Iteration: \", to_string(i)) keeps updating same line on display when API is called with different values of i. The valid values of severity parameter is 0 to 3 inclusive that corresponds to different colors.\n\nArgs:     message (str) Message to be printed     message_param (str, optional) Parameter to be printed next to the message     severity (int, optional) Range 0-3, inclusive, corresponding to the severity of the message\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simRunConsoleCommand-Tuple{Colosseum.VehicleClient, Any}","page":"API Reference","title":"Colosseum.simRunConsoleCommand","text":"Allows the client to execute a command in Unreal's native console, via an API. Affords access to the countless built-in commands such as \"stat unit\", \"stat fps\", \"open [map]\", adjust any config settings, etc. etc. Allows the user to create bespoke APIs very easily, by adding a custom event to the level blueprint, and then calling the console command \"ce MyEventName [args]\". No recompilation of AirSim needed!\n\nArgs:     command ([string]) Desired Unreal Engine Console command to run\n\nReturns:     [bool]: Success\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simSetCameraFov","page":"API Reference","title":"Colosseum.simSetCameraFov","text":"Control the field of view of a selected camera\n\nArgs:     cameraname (str) Name of the camera to be controlled     fovdegrees (float) Value of field of view in degrees     vehicle_name (str, optional) Name of vehicle which the camera corresponds to     external (bool, optional) Whether the camera is an External Camera\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetCameraPose","page":"API Reference","title":"Colosseum.simSetCameraPose","text":"Control the pose of a selected camera\n\nArgs:     cameraname (str) Name of the camera to be controlled     pose (Pose) Pose representing the desired position and orientation of the camera     vehiclename (str, optional) Name of vehicle which the camera corresponds to     external (bool, optional) Whether the camera is an External Camera\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetDetectionFilterRadius","page":"API Reference","title":"Colosseum.simSetDetectionFilterRadius","text":"Set detection radius for all cameras\n\nArgs:     cameraname (str) Name of the camera, for backwards compatibility, ID numbers such as 0,1,etc. can also be used     imagetype (ImageType) Type of image required     radiuscm (int) Radius in [cm]     vehiclename (str, optional) Vehicle which the camera is associated with     external (bool, optional) Whether the camera is an External Camera\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetDistortionParam","page":"API Reference","title":"Colosseum.simSetDistortionParam","text":"Set single camera distortion parameter\n\nArgs:     cameraname (str) Name of the camera, for backwards compatibility, ID numbers such as 0,1,etc. can also be used     paramname (str) Name of distortion parameter     value (float) Value of distortion parameter     vehicle_name (str, optional) Vehicle which the camera is associated with     external (bool, optional) Whether the camera is an External Camera\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetDistortionParams","page":"API Reference","title":"Colosseum.simSetDistortionParams","text":"Set camera distortion parameters\n\nArgs:     cameraname (str) Name of the camera, for backwards compatibility, ID numbers such as 0,1,etc. can also be used     distortionparams (dict) Dictionary of distortion param names and corresponding values                                 {\"K1\": 0.0, \"K2\": 0.0, \"K3\": 0.0, \"P1\": 0.0, \"P2\": 0.0}     vehicle_name (str, optional) Vehicle which the camera is associated with     external (bool, optional) Whether the camera is an External Camera\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetLightIntensity-Tuple{Colosseum.VehicleClient, String, Real}","page":"API Reference","title":"Colosseum.simSetLightIntensity","text":"Change intensity of named light\n\nArgs:     light_name (String) Name of light to change     intensity (Real) New intensity value\n\nReturns:     bool: True if successful, otherwise false\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simSetObjectMaterial","page":"API Reference","title":"Colosseum.simSetObjectMaterial","text":"Runtime Swap Texture API See https://microsoft.github.io/AirSim/retexturing/ for details Args:     objectname (str) name of object to set material for     materialname (str) name of material to set for object     component_id (int, optional) : index of material elements\n\nReturns:     bool: True if material was set\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetObjectMaterialFromTexture","page":"API Reference","title":"Colosseum.simSetObjectMaterialFromTexture","text":"Runtime Swap Texture API See https://microsoft.github.io/AirSim/retexturing/ for details Args:     objectname (str) name of object to set material for     texturepath (str) path to texture to set for object     component_id (int, optional) : index of material elements\n\nReturns:     bool: True if material was set\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetObjectPose","page":"API Reference","title":"Colosseum.simSetObjectPose","text":"Set the pose of the object(actor) in the environment\n\nThe specified actor must have Mobility set to movable, otherwise there will be unend\n\nfunctionined behaviour.     See https://www.unrealengine.com/en-US/blog/moving-physical-objects for details on how to set Mobility and the effect of Teleport parameter\n\nArgs:\n    object_name (str) Name of the object(actor) to move\n    pose (Pose) Desired Pose of the object\n    teleport (bool, optional) Whether to move the object immediately without affecting their velocity\n\nReturns:\n    bool: If the move was successful\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetObjectScale-Tuple{Colosseum.VehicleClient, Any, Any}","page":"API Reference","title":"Colosseum.simSetObjectScale","text":"Sets scale of an object in the world\n\nArgs:     objectname (str) Object to set the scale of     scalevector (airsim.Vector3r) Desired scale of object\n\nReturns:     bool: True if scale change was successful\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simSetSegmentationObjectID","page":"API Reference","title":"Colosseum.simSetSegmentationObjectID","text":"Set segmentation ID for specific objects\n\nSee https://microsoft.github.io/AirSim/image_apis/#segmentation for details\n\nArgs:     meshname (str) Name of the mesh to set the ID of (supports regex)     objectid (int) Object ID to be set, range 0-255\n\n                    RBG values for IDs can be seen at https://microsoft.github.io/AirSim/seg_rgbs.txt\nis_name_regex (bool, optional) Whether the mesh name is a regex\n\nReturns:     bool: If the mesh was found\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetTimeOfDay","page":"API Reference","title":"Colosseum.simSetTimeOfDay","text":"Control the position of Sun in the environment\n\nSun's position is computed using the coordinates specified in OriginGeopoint in settings for the date-time specified in the argument, else if the string is empty, current date & time is used\n\nArgs:     isenabled (bool) True to enable time-of-day effect, false to reset the position to original     startdatetime (str, optional) Date & Time in %Y-%m-%d %H:%M:%S format, e.g. 2018-02-12 15:20:00     isstartdatetimedst (bool, optional) True to adjust for Daylight Savings Time     celestialclockspeed (float, optional) Run celestial clock faster || slower than simulation clock                                             E.g. Value 100 means for every 1 second of simulation clock, Sun's position is advanced by 100 seconds                                             so Sun will move in sky much faster     updateintervalsecs (float, optional) Interval to update the Sun's position     movesun (bool, optional) Whether || not to move the Sun\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetTraceLine","page":"API Reference","title":"Colosseum.simSetTraceLine","text":"Modify the color and thickness of the line when Tracing is enabled\n\nTracing can be enabled by pressing T in the Editor || setting EnableTrace to True in the Vehicle Settings\n\nArgs:     colorrgba (list) desired RGBA values from 0.0 to 1.0     thickness (float, optional) Thickness of the line     vehiclename (string, optional) Name of the vehicle to set Trace line values for\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetVehiclePose","page":"API Reference","title":"Colosseum.simSetVehiclePose","text":"Set the pose of the vehicle\n\nIf you don't want to change position (or orientation) then just set components of position (or orientation) to floating point nan values\n\nArgs:     pose (Pose) Desired Pose pf the vehicle     ignorecollision (bool) Whether to ignore any collision || not     vehiclename (str, optional) Name of the vehicle to move\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSetWeatherParameter-Tuple{Colosseum.VehicleClient, Any, Real}","page":"API Reference","title":"Colosseum.simSetWeatherParameter","text":"Enable various weather effects\n\nArgs:     param (WeatherParameter) Weather effect to be enabled     val (float) Intensity of the effect, Range 0-1\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simSpawnObject","page":"API Reference","title":"Colosseum.simSpawnObject","text":"Spawned selected object in the world\n\nArgs:     objectname (str) Desired name of new object     assetname (str) Name of asset(mesh) in the project database     pose (airsim.Pose) Desired pose of object     scale (airsim.Vector3r) Desired scale of object     physicsenabled (bool, optional) Whether to enable physics for the object     isblueprint (bool, optional) Whether to spawn a blueprint || an actor\n\nReturns:     str: Name of spawned object, in case it had to be modified\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simSwapTextures","page":"API Reference","title":"Colosseum.simSwapTextures","text":"Runtime Swap Texture API\n\nSee https://microsoft.github.io/AirSim/retexturing/ for details\n\nArgs:     tags (str) string of \",\" || \", \" delimited tags to identify on which actors to perform the swap     tex_id (int, optional) indexes the array of textures assigned to each actor undergoing a swap\n\n                        If out-of-bounds for some object's texture set, it will be taken modulo the number of textures that were available\ncomponent_id (int, optional)\nmaterial_id (int, optional)\n\nReturns:     list[str]: List of objects which matched the provided tags and had the texture swap perfomed\n\n\n\n\n\n","category":"function"},{"location":"api/api_reference/#Colosseum.simTestLineOfSightBetweenPoints-Tuple{Colosseum.VehicleClient, Any, Any}","page":"API Reference","title":"Colosseum.simTestLineOfSightBetweenPoints","text":"Returns whether the target point is visible from the perspective of the source point\n\nArgs:     point1 (GeoPoint) source point     point2 (GeoPoint) target point\n\nReturns:     [bool]: Success\n\n\n\n\n\n","category":"method"},{"location":"api/api_reference/#Colosseum.simTestLineOfSightToPoint","page":"API Reference","title":"Colosseum.simTestLineOfSightToPoint","text":"Returns whether the target point is visible from the perspective of the inputted vehicle\n\nArgs:     point (GeoPoint) target point     vehicle_name (str, optional) Name of vehicle\n\nReturns:     [bool]: Success\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Colosseum","category":"page"},{"location":"#Colosseum","page":"Home","title":"Colosseum","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Colosseum.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Colosseum]","category":"page"}]
}
